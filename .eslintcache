[{"C:\\NFL\\nfl_prog_web\\src\\index.js":"1","C:\\NFL\\nfl_prog_web\\src\\reportWebVitals.js":"2","C:\\NFL\\nfl_prog_web\\src\\App.js":"3","C:\\NFL\\nfl_prog_web\\src\\pages\\home\\Home.js":"4","C:\\NFL\\nfl_prog_web\\src\\components\\common\\Header.js":"5","C:\\NFL\\nfl_prog_web\\src\\components\\login\\Login.js":"6","C:\\NFL\\nfl_prog_web\\src\\components\\login\\LoginForm.js":"7"},{"size":500,"mtime":1611928658077,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":159,"mtime":1611930075312,"results":"11","hashOfConfig":"9"},{"size":274,"mtime":1611929705975,"results":"12","hashOfConfig":"9"},{"size":1946,"mtime":1611945390547,"results":"13","hashOfConfig":"9"},{"size":5896,"mtime":1611942618175,"results":"14","hashOfConfig":"9"},{"size":10781,"mtime":1611948271837,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"13f26yr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"C:\\NFL\\nfl_prog_web\\src\\index.js",[],["32","33"],"C:\\NFL\\nfl_prog_web\\src\\reportWebVitals.js",[],"C:\\NFL\\nfl_prog_web\\src\\App.js",[],"C:\\NFL\\nfl_prog_web\\src\\pages\\home\\Home.js",[],"C:\\NFL\\nfl_prog_web\\src\\components\\common\\Header.js",[],"C:\\NFL\\nfl_prog_web\\src\\components\\login\\Login.js",[],"C:\\NFL\\nfl_prog_web\\src\\components\\login\\LoginForm.js",["34","35","36","37"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    }\r\n}));\r\n\r\nconst LoginForm = () => {\r\n    const classes = useStyles();\r\n\r\n    const [year,setYear] = React.useState('');\r\n    const [Mon,setMonth] = React.useState('');\r\n    const [Day,setDay] = React.useState('');\r\n\r\n    const handleYearChange = (event) => {\r\n        setYear(event.target.value);\r\n    };\r\n\r\n    const handleMonthChange = (event) => {\r\n        setMonth(event.target.value);\r\n    };\r\n\r\n    const handleDayChange = (event) => {\r\n        setDay(event.target.value);\r\n    };\r\n    const Login=()=>{\r\n        alert(\"Logged in functionality in Progress\");\r\n    }\r\n    const Captcha = () => {\r\n        debugger;\r\n        var alpha = new Array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');\r\n        var i;\r\n        for (i = 0; i < 6; i++) {\r\n            var a = alpha[Math.floor(Math.random() * alpha.length)];\r\n            var b = alpha[Math.floor(Math.random() * alpha.length)];\r\n            var c = alpha[Math.floor(Math.random() * alpha.length)];\r\n            var d = alpha[Math.floor(Math.random() * alpha.length)];\r\n            var e = alpha[Math.floor(Math.random() * alpha.length)];\r\n            var f = alpha[Math.floor(Math.random() * alpha.length)];\r\n            var g = alpha[Math.floor(Math.random() * alpha.length)];\r\n        }\r\n        var code = a + ' ' + b + '  ' + c + ' ' + d + ' ' + e + ' ' + f + ' ' + g;\r\n        document\r\n            .getElementById(\"mainCaptcha\")\r\n            .value = code\r\n    }\r\n    return (\r\n\r\n        <div className={classes.paper}>\r\n            <span className=\"login-header\">Log in to access your account</span>\r\n            <form className={classes.form} noValidate>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Enter Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <Select\r\n                                value={year}\r\n                                onChange={handleYearChange}\r\n                                displayEmpty\r\n                                className={classes.selectEmpty}\r\n                                inputProps={{\r\n                                'aria-label': 'Without label'\r\n                            }}>\r\n                                <MenuItem value=\"\">\r\n                                    <em>Select Year</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={10}>2021</MenuItem>\r\n                                <MenuItem value={20}>2020</MenuItem>\r\n                                <MenuItem value={30}>2019</MenuItem>\r\n                            </Select>\r\n                            <FormHelperText>Year</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <Select\r\n                                value={Mon}\r\n                                onChange={handleMonthChange}\r\n                                displayEmpty\r\n                                className={classes.selectEmpty}\r\n                                inputProps={{\r\n                                'aria-label': 'Without label'\r\n                            }}>\r\n                                <MenuItem value=\"\">\r\n                                    <em>Select Month</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={1}>1</MenuItem>\r\n                                <MenuItem value={2}>2</MenuItem>\r\n                                <MenuItem value={3}>3</MenuItem>\r\n                                <MenuItem value={4}>4</MenuItem>\r\n                                <MenuItem value={5}>5</MenuItem>\r\n                                <MenuItem value={6}>6</MenuItem>\r\n                                <MenuItem value={7}>7</MenuItem>\r\n                                <MenuItem value={8}>8</MenuItem>\r\n                                <MenuItem value={9}>9</MenuItem>\r\n                                <MenuItem value={10}>10</MenuItem>\r\n                                <MenuItem value={11}>11</MenuItem>\r\n                                <MenuItem value={12}>12</MenuItem>\r\n                            </Select>\r\n                            <FormHelperText>Month</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <Select\r\n                                value={Day}\r\n                                onChange={handleDayChange}\r\n                                displayEmpty\r\n                                className={classes.selectEmpty}\r\n                                inputProps={{\r\n                                'aria-label': 'Without label'\r\n                            }}>\r\n                                <MenuItem value=\"\">\r\n                                    <em>Select Day</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={1}>1</MenuItem>\r\n                                <MenuItem value={2}>2</MenuItem>\r\n                                <MenuItem value={3}>3</MenuItem>\r\n                                <MenuItem value={4}>4</MenuItem>\r\n                                <MenuItem value={5}>5</MenuItem>\r\n                                <MenuItem value={6}>6</MenuItem>\r\n                                <MenuItem value={7}>7</MenuItem>\r\n                                <MenuItem value={8}>8</MenuItem>\r\n                                <MenuItem value={9}>9</MenuItem>\r\n                                <MenuItem value={10}>10</MenuItem>\r\n                                <MenuItem value={11}>11</MenuItem>\r\n                                <MenuItem value={12}>12</MenuItem>\r\n                                <MenuItem value={13}>13</MenuItem>\r\n                                <MenuItem value={14}>14</MenuItem>\r\n                                <MenuItem value={15}>15</MenuItem>\r\n                                <MenuItem value={16}>16</MenuItem>\r\n                                <MenuItem value={17}>17</MenuItem>\r\n                                <MenuItem value={18}>18</MenuItem>\r\n                                <MenuItem value={19}>19</MenuItem>\r\n                                <MenuItem value={20}>20</MenuItem>\r\n                                <MenuItem value={21}>21</MenuItem>\r\n                                <MenuItem value={22}>22</MenuItem>\r\n                                <MenuItem value={23}>23</MenuItem>\r\n                                <MenuItem value={24}>24</MenuItem>\r\n                                <MenuItem value={25}>25</MenuItem>\r\n                                <MenuItem value={26}>26</MenuItem>\r\n                                <MenuItem value={27}>27</MenuItem>\r\n                                <MenuItem value={28}>28</MenuItem>\r\n                                <MenuItem value={29}>29</MenuItem>\r\n                                <MenuItem value={30}>30</MenuItem>\r\n                                <MenuItem value={31}>31</MenuItem>\r\n                                \r\n                            </Select>\r\n                            <FormHelperText>Day</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Enter Security Code\"\r\n                            name=\"code\"/>\r\n                    </Grid>\r\n                    {/* <Grid item xs={12}>\r\n                        <div onLoad={Captcha()}>\r\n                            <input type=\"text\" id=\"mainCaptcha\"/>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                id=\"refresh\"\r\n                                value=\"Refresh\"\r\n                                onClick={Captcha()}>\r\n                                Primary\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </Grid> */}\r\n                    <Grid item xs={12}>\r\n                    <div class=\"g-recaptcha\" data-sitekey=\"your_site_key\"></div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    onClick={Login}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}>\r\n                    Log In\r\n                </Button>\r\n                <Grid container justify=\"flex-start\">\r\n                    <Grid item>\r\n                        <Link href=\"#\" variant=\"body2\">\r\n                            Register If you don't have an account\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default LoginForm;\r\n\r\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":24},{"ruleId":"42","severity":1,"message":"46","line":6,"column":8,"nodeType":"44","messageId":"45","endLine":6,"endColumn":16},{"ruleId":"42","severity":1,"message":"47","line":55,"column":11,"nodeType":"44","messageId":"45","endLine":55,"endColumn":18},{"ruleId":"48","severity":1,"message":"49","line":57,"column":21,"nodeType":"50","messageId":"51","endLine":57,"endColumn":290},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Captcha' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-global-assign","no-unsafe-negation"]